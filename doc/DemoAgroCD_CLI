@YashmaDon ➜ /workspaces/demo (main) $ kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
customresourcedefinition.apiextensions.k8s.io/applications.argoproj.io created
customresourcedefinition.apiextensions.k8s.io/applicationsets.argoproj.io created
customresourcedefinition.apiextensions.k8s.io/appprojects.argoproj.io created
serviceaccount/argocd-application-controller created
serviceaccount/argocd-applicationset-controller created
serviceaccount/argocd-dex-server created
serviceaccount/argocd-notifications-controller created
serviceaccount/argocd-redis created
serviceaccount/argocd-repo-server created
serviceaccount/argocd-server created
role.rbac.authorization.k8s.io/argocd-application-controller created
role.rbac.authorization.k8s.io/argocd-applicationset-controller created
role.rbac.authorization.k8s.io/argocd-dex-server created
role.rbac.authorization.k8s.io/argocd-notifications-controller created
role.rbac.authorization.k8s.io/argocd-server created
clusterrole.rbac.authorization.k8s.io/argocd-application-controller created
clusterrole.rbac.authorization.k8s.io/argocd-applicationset-controller created
clusterrole.rbac.authorization.k8s.io/argocd-server created
rolebinding.rbac.authorization.k8s.io/argocd-application-controller created
rolebinding.rbac.authorization.k8s.io/argocd-applicationset-controller created
rolebinding.rbac.authorization.k8s.io/argocd-dex-server created
rolebinding.rbac.authorization.k8s.io/argocd-notifications-controller created
rolebinding.rbac.authorization.k8s.io/argocd-server created
clusterrolebinding.rbac.authorization.k8s.io/argocd-application-controller created
clusterrolebinding.rbac.authorization.k8s.io/argocd-applicationset-controller created
clusterrolebinding.rbac.authorization.k8s.io/argocd-server created
configmap/argocd-cm created
configmap/argocd-cmd-params-cm created
configmap/argocd-gpg-keys-cm created
configmap/argocd-notifications-cm created
configmap/argocd-rbac-cm created
configmap/argocd-ssh-known-hosts-cm created
configmap/argocd-tls-certs-cm created
secret/argocd-notifications-secret created
secret/argocd-secret created
service/argocd-applicationset-controller created
service/argocd-dex-server created
service/argocd-metrics created
service/argocd-notifications-controller-metrics created
service/argocd-redis created
service/argocd-repo-server created
service/argocd-server created
service/argocd-server-metrics created
deployment.apps/argocd-applicationset-controller created
deployment.apps/argocd-dex-server created
deployment.apps/argocd-notifications-controller created
deployment.apps/argocd-redis created
deployment.apps/argocd-repo-server created
deployment.apps/argocd-server created
statefulset.apps/argocd-application-controller created
networkpolicy.networking.k8s.io/argocd-application-controller-network-policy created
networkpolicy.networking.k8s.io/argocd-applicationset-controller-network-policy created
networkpolicy.networking.k8s.io/argocd-dex-server-network-policy created
networkpolicy.networking.k8s.io/argocd-notifications-controller-network-policy created
networkpolicy.networking.k8s.io/argocd-redis-network-policy created
networkpolicy.networking.k8s.io/argocd-repo-server-network-policy created
networkpolicy.networking.k8s.io/argocd-server-network-policy created
@YashmaDon ➜ /workspaces/demo (main) $ k get all -n argocd
bash: k: command not found
@YashmaDon ➜ /workspaces/demo (main) $ alias k=kubectl
@YashmaDon ➜ /workspaces/demo (main) $ k get all -n argocd
NAME                                                    READY   STATUS    RESTARTS   AGE
pod/argocd-redis-66d9777b78-f45p5                       1/1     Running   0          70s
pod/argocd-notifications-controller-6b66d47b45-hxpd5    1/1     Running   0          70s
pod/argocd-applicationset-controller-6c8fbc69b5-2zvtg   1/1     Running   0          71s
pod/argocd-server-5d8d58455f-9cjvl                      1/1     Running   0          70s
pod/argocd-dex-server-59bd76d76-rg2jp                   1/1     Running   0          70s
pod/argocd-repo-server-b9957974f-tmdl7                  1/1     Running   0          70s
pod/argocd-application-controller-0                     1/1     Running   0          69s

NAME                                              TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                      AGE
service/argocd-applicationset-controller          ClusterIP   10.43.176.54    <none>        7000/TCP,8080/TCP            72s
service/argocd-dex-server                         ClusterIP   10.43.205.122   <none>        5556/TCP,5557/TCP,5558/TCP   72s
service/argocd-metrics                            ClusterIP   10.43.248.16    <none>        8082/TCP                     72s
service/argocd-notifications-controller-metrics   ClusterIP   10.43.247.65    <none>        9001/TCP                     72s
service/argocd-redis                              ClusterIP   10.43.173.110   <none>        6379/TCP                     71s
service/argocd-repo-server                        ClusterIP   10.43.103.173   <none>        8081/TCP,8084/TCP            71s
service/argocd-server                             ClusterIP   10.43.174.175   <none>        80/TCP,443/TCP               71s
service/argocd-server-metrics                     ClusterIP   10.43.216.238   <none>        8083/TCP                     71s

NAME                                               READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/argocd-redis                       1/1     1            1           70s
deployment.apps/argocd-notifications-controller    1/1     1            1           70s
deployment.apps/argocd-applicationset-controller   1/1     1            1           71s
deployment.apps/argocd-server                      1/1     1            1           70s
deployment.apps/argocd-dex-server                  1/1     1            1           71s
deployment.apps/argocd-repo-server                 1/1     1            1           70s

NAME                                                          DESIRED   CURRENT   READY   AGE
replicaset.apps/argocd-redis-66d9777b78                       1         1         1       70s
replicaset.apps/argocd-notifications-controller-6b66d47b45    1         1         1       70s
replicaset.apps/argocd-applicationset-controller-6c8fbc69b5   1         1         1       71s
replicaset.apps/argocd-server-5d8d58455f                      1         1         1       70s
replicaset.apps/argocd-dex-server-59bd76d76                   1         1         1       70s
replicaset.apps/argocd-repo-server-b9957974f                  1         1         1       70s

NAME                                             READY   AGE
statefulset.apps/argocd-application-controller   1/1     70s
@YashmaDon ➜ /workspaces/demo (main) $ kubectl port-forward svc/argocd-server -n argocd 8080:443&
[1] 22842
@YashmaDon ➜ /workspaces/demo (main) $ Forwarding from 127.0.0.1:8080 -> 8080
Forwarding from [::1]:8080 -> 8080
Handling connection for 8080
Handling connection for 8080
@YashmaDon ➜ /workspaces/demo (main) $ k -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}"
eElQaFVySy1nNkM0RE1icA==@YashmaDon ➜ /workspaces/demo (main) $ k -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}"|base64 -d;echo
xIPhUrK-g6C4DMbp
@YashmaDon ➜ /workspaces/demo (main) $ Handling connection for 8080

@YashmaDon ➜ /workspaces/demo (main) $ kubectl version 
Client Version: v1.29.3
Kustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3
Server Version: v1.28.8+k3s1
@YashmaDon ➜ /workspaces/demo (main) $ kubectl port-forward svc/argocd-server -n argocd 8080:443&
[2] 41106
@YashmaDon ➜ /workspaces/demo (main) $ Unable to listen on port 8080: Listeners failed to create with the following errors: [unable to create listener: Error listen tcp4 127.0.0.1:8080: bind: address already in use unable to create listener: Error listen tcp6 [::1]:8080: bind: address already in use]
error: unable to listen on any of the requested ports: [{8080 8080}]
Handling connection for 8080
Handling connection for 8080
Handling connection for 8080
Handling connection for 8080
Handling connection for 8080
Handling connection for 8080
Handling connection for 8080
Handling connection for 8080
Handling connection for 8080
Handling connection for 8080
Handling connection for 8080
Handling connection for 8080
Handling connection for 8080

[2]+  Exit 1                  kubectl port-forward svc/argocd-server -n argocd 8080:443